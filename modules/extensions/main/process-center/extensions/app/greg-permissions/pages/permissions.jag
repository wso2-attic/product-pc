<%
/*
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.w   See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require('/modules/publisher.js').exec(function (ctx) {
    caramel = require('caramel');
    var PAGE_PATTERN = '/{context}/pages/permissions/{type}/{id}';
    var gregAPI = require('/modules/asset-action-api.js').api;

    var uriMatcher = new URIMatcher(ctx.request.getRequestURI());
    var options = uriMatcher.match(PAGE_PATTERN);
    var asset = require('rxt').asset;
    var ui = require('rxt').ui;
    var page = ui.buildPage(ctx.session, ctx.request);
    var am;
    var instance;
    var output;
    if ((!options.id) || (!options.type)) {
        ctx.response.sendError(404, 'Unable to locate the asset without a valid Id or Type');
        return;
    }
    am = asset.createUserAssetManager(ctx.session, options.type);
    instance = am.get(options.id);
    output = am.render(instance, page)._custom();

    output.rolePermissions = gregAPI.permissions.list(am, page.assets.id);
    if (output.rolePermissions != null) {
        caramel.render(output);
    }
}, request, response, session); %>
